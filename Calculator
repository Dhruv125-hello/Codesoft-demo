import tkinter as tk
from math import sin, cos, tan, sqrt, pow, radians

# Main calculator class
class ScientificCalculator:
    def __init__(self, root):
        self.root = root
        self.root.title("Scientific Calculator")
        self.root.geometry("400x550")
        self.root.configure(bg="lightgray")

        self.expression = ""
        self.input_text = tk.StringVar()

        self.create_widgets()

    def create_widgets(self):
        # Entry field
        input_frame = tk.Frame(self.root, bg="white")
        input_frame.pack(pady=10)

        input_field = tk.Entry(input_frame, font=('Arial', 24), textvariable=self.input_text, width=22, bd=5, relief='sunken', justify='right')
        input_field.grid(row=0, column=0, ipady=15)

        # Button frame
        button_frame = tk.Frame(self.root, bg="lightgray")
        button_frame.pack()

        # Buttons layout
        buttons = [
            ['7', '8', '9', '/', 'sqrt'],
            ['4', '5', '6', '*', 'pow'],
            ['1', '2', '3', '-', 'sin'],
            ['0', '.', '=', '+', 'cos'],
            ['C', '(', ')', 'tan', 'Exit']
        ]

        for r, row in enumerate(buttons):
            for c, btn in enumerate(row):
                b = tk.Button(button_frame, text=btn, width=6, height=2, font=('Arial', 16),
                              bd=2, relief='raised', command=lambda b=btn: self.on_button_click(b))
                b.grid(row=r, column=c, padx=5, pady=5)

    def on_button_click(self, char):
        if char == "C":
            self.expression = ""
        elif char == "=":
            try:
                self.expression = str(eval(self.expression))
            except Exception:
                self.expression = "Error"
        elif char == "sqrt":
            try:
                self.expression = str(sqrt(eval(self.expression)))
            except:
                self.expression = "Error"
        elif char == "sin":
            try:
                self.expression = str(sin(radians(eval(self.expression))))
            except:
                self.expression = "Error"
        elif char == "cos":
            try:
                self.expression = str(cos(radians(eval(self.expression))))
            except:
                self.expression = "Error"
        elif char == "tan":
            try:
                self.expression = str(tan(radians(eval(self.expression))))
            except:
                self.expression = "Error"
        elif char == "pow":
            self.expression += "**"
        elif char == "Exit":
            self.root.quit()
        else:
            self.expression += str(char)
        self.input_text.set(self.expression)

# Run the calculator
if __name__ == "__main__":
    root = tk.Tk()
    app = ScientificCalculator(root)
    root.mainloop()
