import tkinter as tk
from tkinter import messagebox
import random
import string

class PasswordGeneratorApp:
    def __init__(self, master):
        self.master = master
        self.master.title("üîê Password Generator")
        self.master.geometry("400x380")
        self.master.resizable(False, False)
        self.master.configure(bg="#ffffff")

        # Title
        tk.Label(master, text="Strong Password Generator", font=("Helvetica", 16, "bold"), bg="#ffffff").pack(pady=10)

        # Password length
        tk.Label(master, text="Enter Password Length:", bg="#ffffff", font=("Helvetica", 12)).pack()
        self.length_var = tk.IntVar(value=12)
        tk.Entry(master, textvariable=self.length_var, width=10, font=("Helvetica", 12)).pack(pady=5)

        # Character set options
        self.include_upper = tk.BooleanVar(value=True)
        self.include_lower = tk.BooleanVar(value=True)
        self.include_digits = tk.BooleanVar(value=True)
        self.include_symbols = tk.BooleanVar(value=True)

        tk.Checkbutton(master, text="Include Uppercase (A-Z)", variable=self.include_upper, bg="#ffffff").pack(anchor="w", padx=40)
        tk.Checkbutton(master, text="Include Lowercase (a-z)", variable=self.include_lower, bg="#ffffff").pack(anchor="w", padx=40)
        tk.Checkbutton(master, text="Include Numbers (0-9)", variable=self.include_digits, bg="#ffffff").pack(anchor="w", padx=40)
        tk.Checkbutton(master, text="Include Symbols (!@#)", variable=self.include_symbols, bg="#ffffff").pack(anchor="w", padx=40)

        # Generate button
        tk.Button(master, text="Generate Password", command=self.generate_password,
                  bg="#007bff", fg="white", font=("Helvetica", 12), width=25).pack(pady=15)

        # Output field
        self.result_entry = tk.Entry(master, font=("Helvetica", 14), justify="center", width=30)
        self.result_entry.pack(pady=10)

        # Copy button
        tk.Button(master, text="Copy to Clipboard", command=self.copy_to_clipboard,
                  bg="#28a745", fg="white", font=("Helvetica", 12), width=25).pack(pady=5)

    def generate_password(self):
        length = self.length_var.get()

        if length < 4:
            messagebox.showwarning("Invalid Length", "Password length should be at least 4.")
            return

        character_pool = ""
        if self.include_upper.get():
            character_pool += string.ascii_uppercase
        if self.include_lower.get():
            character_pool += string.ascii_lowercase
        if self.include_digits.get():
            character_pool += string.digits
        if self.include_symbols.get():
            character_pool += string.punctuation

        if not character_pool:
            messagebox.showerror("Selection Error", "Select at least one character type.")
            return

        password = ''.join(random.choice(character_pool) for _ in range(length))
        self.result_entry.delete(0, tk.END)
        self.result_entry.insert(0, password)

    def copy_to_clipboard(self):
        password = self.result_entry.get()
        if password:
            self.master.clipboard_clear()
            self.master.clipboard_append(password)
            messagebox.showinfo("Copied", "Password copied to clipboard!")
        else:
            messagebox.showwarning("No Password", "Generate a password first.")

# Run the app
if __name__ == "__main__":
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()
